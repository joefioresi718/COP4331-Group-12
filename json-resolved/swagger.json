{
  "swagger" : "2.0",
  "info" : {
    "description" : "API for POOP Group 12 contacts app",
    "version" : "1.0.0",
    "title" : "POOP Group 12 API"
  },
  "host" : "crm-group12.com",
  "basePath" : "/API/",
  "schemes" : [ "http" ],
  "paths" : {
    "/AmAlive.php" : {
      "post" : {
        "tags" : [ "Users" ],
        "summary" : "Tests endpoint",
        "description" : "Checks if alive",
        "operationId" : "amAlive",
        "parameters" : [ ],
        "responses" : {
          "200" : {
            "description" : "I am alive"
          },
          "404" : {
            "description" : "I am dead :("
          }
        }
      }
    },
    "/Login.php" : {
      "post" : {
        "tags" : [ "Users" ],
        "summary" : "Logs in to contacts app",
        "description" : "Logs in to contacts app",
        "operationId" : "doLogin",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "loginItem",
          "description" : "Login",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Login"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "OK"
          },
          "404" : {
            "description" : "URL Not Found"
          }
        }
      }
    },
    "/CreateUser.php" : {
      "post" : {
        "tags" : [ "Users" ],
        "summary" : "Adds user to user table",
        "description" : "Adds user into user table",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "newUser",
          "description" : "New user",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/User"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully created a new user"
          },
          "404" : {
            "description" : "Could not create user"
          }
        }
      }
    },
    "/CreateContact.php" : {
      "post" : {
        "tags" : [ "Contacts" ],
        "summary" : "Adds contact to logged in user",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "newContact",
          "description" : "New contact",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Contact"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully added contact"
          },
          "404" : {
            "description" : "Could not add contact"
          }
        }
      }
    },
    "/UpdateContact.php" : {
      "post" : {
        "tags" : [ "Contacts" ],
        "summary" : "Updates a contact of logged in user",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "updateContact",
          "description" : "Updates existing contact",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Contact"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully updated contact"
          },
          "404" : {
            "description" : "Could not update contact"
          }
        }
      }
    },
    "/SearchContacts.php" : {
      "post" : {
        "tags" : [ "Contacts" ],
        "summary" : "Searches contacts of logged in user",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "searchContact",
          "description" : "Search contact",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Searching"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully found contact"
          },
          "404" : {
            "description" : "Could not find contact"
          }
        }
      }
    },
    "/DeleteContact.php" : {
      "post" : {
        "tags" : [ "Contacts" ],
        "summary" : "Deletes contatct of logged in user",
        "consumes" : [ "application/json" ],
        "produces" : [ "application/json" ],
        "parameters" : [ {
          "in" : "body",
          "name" : "delContact",
          "description" : "Delete contact",
          "required" : false,
          "schema" : {
            "$ref" : "#/definitions/Delete"
          }
        } ],
        "responses" : {
          "200" : {
            "description" : "Successfully deleted contact"
          },
          "404" : {
            "description" : "Could not delete contact"
          }
        }
      }
    }
  },
  "definitions" : {
    "Login" : {
      "type" : "object",
      "required" : [ "password", "username" ],
      "properties" : {
        "username" : {
          "type" : "string",
          "example" : "testUser"
        },
        "password" : {
          "type" : "string",
          "example" : "testPass"
        }
      }
    },
    "User" : {
      "type" : "object",
      "required" : [ "email", "firstName", "lastName", "password", "username" ],
      "properties" : {
        "username" : {
          "type" : "string",
          "example" : "testUser"
        },
        "password" : {
          "type" : "string",
          "example" : "testPass"
        },
        "firstName" : {
          "type" : "string",
          "example" : "John"
        },
        "lastName" : {
          "type" : "string",
          "example" : "Smith"
        },
        "email" : {
          "type" : "string",
          "example" : "jsmith@gmail.com"
        }
      }
    },
    "Contact" : {
      "type" : "object",
      "required" : [ "ID", "email", "firstName", "lastName", "phone" ],
      "properties" : {
        "firstName" : {
          "type" : "string",
          "example" : "Mike"
        },
        "lastName" : {
          "type" : "string",
          "example" : "Wazowski"
        },
        "email" : {
          "type" : "string",
          "example" : "mike.waz@gmail.com"
        },
        "phone" : {
          "type" : "integer",
          "example" : 1234567890
        },
        "ID" : {
          "type" : "integer",
          "example" : 1
        }
      }
    },
    "Searching" : {
      "type" : "object",
      "required" : [ "ID", "search" ],
      "properties" : {
        "ID" : {
          "type" : "integer",
          "example" : 1
        },
        "search" : {
          "type" : "string",
          "example" : "Mike"
        }
      }
    },
    "Delete" : {
      "type" : "object",
      "required" : [ "ID" ],
      "properties" : {
        "ID" : {
          "type" : "integer",
          "example" : 1
        }
      }
    }
  }
}